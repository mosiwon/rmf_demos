# FLEET CONFIG =================================================================
# RMF Fleet parameters

rmf_fleet:
  name: "turtlebot4_lite"
  limits:
    linear: [0.5, 0.75] # velocity, acceleration
    angular: [0.6, 2.0] # velocity, acceleration
  profile: # Robot profile is modelled as a circle
    footprint: 0.3 # radius in m
    vicinity: 0.5 # radius in m
  reversible: True # whether robots in this fleet can reverse
  battery_system:
    voltage: 12.0 # V
    capacity: 24.0 # Ahr
    charging_current: 5.0 # A
  mechanical_system:
    mass: 20.0 # kg
    moment_of_inertia: 10.0 #kgm^2
    friction_coefficient: 0.22
  ambient_system:
    power: 20.0 # W
  tool_system:
    power: 0.0 # W
  recharge_threshold: 0.10 # Battery level below which robots in this fleet will not operate
  recharge_soc: 1.0 # Battery level to which robots in this fleet should be charged up to during recharging tasks
  publish_fleet_state: 10.0 # Publish frequency for fleet state, ensure that it is same as robot_state_update_frequency
  account_for_battery_drain: True
  task_capabilities: # Specify the types of RMF Tasks that robots in this fleet are capable of performing
    loop: True
    delivery: True
  actions: ["teleop"]
  finishing_request: "park" # [park, charge, nothing]
  responsive_wait: True # Should responsive wait be on/off for the whole fleet by default? False if not specified.
  # turtlebot4_standard CONFIG =================================================================
  robots:
    turtlebot4_lite_1:
        charger: "start"
        responsive_wait: False # Should responsive wait be on/off for this specific robot? Overrides the fleet-wide setting.


fleet_manager:
  prefix: "http://127.0.0.1:8080"
  ip: "127.0.0.1"
  port: 22014
  user: "some_user"
  password: "some_password"   





# TRANSFORM CONFIG =============================================================
# For computing transforms between Robot and RMF coordinate systems

# Optional
reference_coordinates:
  L1:
    rmf: [[0.0, 0.0 ],
        [1.0, 1.0],
        [2.0, 2.0],
        [3.0, 3.0]]
    robot: [[0.0, 0.0 ],
          [1.0, 1.0],
          [2.0, 2.0],
          [3.0, 3.0]]
